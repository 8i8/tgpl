package github // import "tgpl/ex_04.11-github_client/github"

NAME

    gitspoke

SYNOPSIS

    gitspoke [user|repo|number][orth2][options]

DESCRIPTION

    gitspoke is a github client designed for raising and tracking and
    updating github issues on the github platform from the users command
    line by way of the github HTTP API. Giving the user access from the
    command line or their favorite editor application.

GITHUB API HTTP

    	      |GET  |POST |PATCH|PUT
    	------|-----|-----|-----|-----
    	list  | 1   |     |     |
    	------|-----|-----|-----|-----
    	read  | 1   |     |     |
    	------|-----|-----|-----|-----
    	raise |     | 1   |     |
    	------|-----|-----|-----|-----
    	edit  |     |     | 1   |
    	------|-----|-----|-----|-----
    	lock  |     |     |     | 1

    	GET /issues                                  // all issues
     	GET /user/issues                             // all issues for user
     	GET /orgs/:org/issues                        // all issues for organisation
     	GET /repos/:owner/:repo/issues               // all issues for reps
     	GET /repos/:owner/:repo/issues/:number       // single issue
     	POST /repos/:owner/:repo/issues              // Create issue
     	PATCH /repos/:owner/:repo/issues/:number     // edit issue
     	PUT /repos/:owner/:repo/issues/:number/lock  // Lock or delete an issue
    	https://api.github.com/search/issues

TRUTHTABLE

    Table representation of program states, the program has essentially two
    different primary states, the first of which is prevelent in the main
    function, designating the programs initial running mode to establish the
    type of HTTP request to be made. The second defines the formation of
    the URL for the request.

    ┌────────┬────────┬────────┬────────┬──────────┬────────┬────────────┐
    │-o org  │        │        │        │-k ?      │        │            │
    │-a auth │        │        │        │-l lock[r]│        │   State    │
    │-u user │-r repo │-n numb │-t token│-e edit   │-d[exec]│            │
    ├────────┼────────┼────────┼────────┼──────────┼────────┼────────────┤
    │ yes    │        │        │ N/A    │ N/A      │ all    │ list  sear │
    ├────────┼────────┼────────┼────────┼──────────┼────────┼────────────┤
    │        │ yes    │        │ N/A    │ N/A      │ all    │ list  sear │
    ├────────┼────────┼────────┼────────┼──────────┼────────┼────────────┤
    │ yes    │ yes    │        │ N/A    │ N/A      │ all    │ list  sear │
    ├────────┼────────┼────────┼────────┼──────────┼────────┼────────────┤
    │ yes    │ no/fill│ yes    │ N/A    │ N/A      │ all    │ list  sear │
    ├────────┼────────┼────────┼────────┼──────────┼────────┼────────────┤
    │ no/fill│ yes    │ yes    │ N/A    │ N/A      │ all    │ list  sear │
    ├────────┼────────┼────────┼────────┼──────────┼────────┼────────────┤
    │ yes    │ yes    │ yes    │ N/A    │ N/A      │ all    │ read  addr │
    ├────────┼────────┼────────┼────────┼──────────┼────────┼────────────┤
    │ yes    │ yes    │ yes    │ yes    │ -e       │ all    │ edit  addr │
    ├────────┼────────┼────────┼────────┼──────────┼────────┼────────────┤
    │ yes    │ yes    │ yes    │ yes    │ -l       │ all    │ edit  lock │
    ├────────┼────────┼────────┼────────┼──────────┼────────┼────────────┤
    │ yes    │ yes    │ yes    │ yes    │ -k       │ all    │ edit  unlk │
    └────────┴────────┴────────┴────────┴──────────┴────────┴────────────┘

const MoNone = iota ...
func EditIssue(conf Config) error
func InitState(c *Config) error
func ListIssues(conf Config) error
func LoadConfig(c Config) error
func RaiseIssue(conf Config) error
func ReadIssue(conf Config) error
type Config struct{ ... }
type Issue struct{ ... }
type IssueMap struct{ ... }
type IssuesSearchResult struct{ ... }
type Request struct{ ... }
type User struct{ ... }
